<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.light.community.dao.UserMapper"><!--填写user-mapper的全限定类名-->

    <sql id="selectFields"><!--实现字段复用-->
        id,username,password,salt,email,type,status,activation_code,header_url,create_time
    </sql>

    <sql id="insertFields"><!--实现字段复用-->
        username,password,salt,email,type,status,activation_code,header_url,create_time
    </sql>

    <select id="selectById" resultType="User">
        <!--id要写UserMapper中对应声明的方法名-->
        <!--resultType:返回类型（本应写全限定类名，
        但提前已经在application.properties中声明过mybatis.type-aliases-package=com.light.community.entity
        所以只用写类名即可-->
        select  <include refid="selectFields"></include>
        from user
        where id=#{id}<!--#{id}:要引用方法中的参数id-->
    </select>


    <select id="selectByName" resultType="User">
        <!--id要写UserMapper中对应声明的方法名-->
        <!--resultType:返回类型（本应写全限定类名，
        但提前已经在application.properties中声明过mybatis.type-aliases-package=com.light.community.entity
        所以只用写类名即可-->
        select <include refid="selectFields"></include>
        from user
        where username=#{userName}
    </select>

    <select id="selectByEmail" resultType="User">
        <!--id要写UserMapper中对应声明的方法名-->
        <!--resultType:返回类型（本应写全限定类名，
        但提前已经在application.properties中声明过mybatis.type-aliases-package=com.light.community.entity
        所以只用写类名即可-->
        select <include refid="selectFields"></include>
        from user
        where email=#{email}
    </select>

    <insert id="insertUser" parameterType="User" keyProperty="id">
        insert into user(<include refid="insertFields"></include>)
        values(#{userName},#{password},#{salt},#{email},#{type},#{status},#{activationCode},#{headerUrl},#{createTime})
    </insert>

    <update id="updateStatus">
        update user
        set status=#{status}
        where id=#{id}
    </update>

    <update id="updateHeader">
        update user
        set header_url=#{headerUrl}
        where id=#{id}
    </update>

    <update id="updatePassword">
        update user
        set password=#{password}
        where id=#{id}
    </update>
</mapper>